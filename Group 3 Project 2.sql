
--在2000年上映，平均評分分數大於4的電影編號、電影名稱。

--1

CREATE INDEX movie_year_idx ON MOVIE (YEAR DESC); --建立索引

SELECT distinct MOVIE.MOVIE_ID, MOVIE.NAME
FROM MOVIE, RATING
WHERE MOVIE.MOVIE_ID = RATING.MOVIE_ID 
AND RATING.RATING > 4
AND MOVIE.YEAR = '2000';

--2

SELECT distinct M.MOVIE_ID, M.NAME
FROM 
(SELECT * FROM MOVIE WHERE YEAR = '2000') M,
(SELECT * FROM RATING WHERE RATING > 4) R
WHERE M.MOVIE_ID = R.MOVIE_ID;


--找出movie_id<= 5000且評論數 >= 100每部的平均rating分數跟電影名稱，依照電影名稱由Z到A排列

--1
CREATE INDEX NAMEID_IDX ON MOVIE (NAME DESC, MOVIE_ID);

alter session set cursor_sharing=exact;

EXPLAIN PLAN FOR
SELECT /*+INDEX(NAMEID_IDX)*/ distinct M.Name, ROUND(AVG(R.RATING),2) AS average_rating
FROM Movie M, Rating R  
WHERE M.Movie_ID = R.Movie_ID AND M.MOVIE_ID <= '5000' 
GROUP BY M.MOVIE_ID,M.Name
HAVING COUNT(R.RATING) > 100
ORDER BY M.NAME DESC;
SELECT plan_table_output FROM TABLE(DBMS_XPLAN.DISPLAY('PLAN_TABLE'));


--2

EXPLAIN PLAN FOR
SELECT /*+INDEX(MOVIE ID_NAME_IDX)*/ M.Name, ROUND(AVG(R.RATING), 2) AS average_rating
FROM Movie M
JOIN Rating R ON M.Movie_ID = R.Movie_ID
WHERE M.Movie_ID <= 5000
GROUP BY M.Movie_ID, M.Name
HAVING COUNT(R.RATING) >= 100
ORDER BY M.NAME DESC;
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY());

--3

EXPLAIN PLAN FOR
SELECT ROUND(AVG(R.RATING),2) AS Average_Rating
FROM Movie M
JOIN Rating R ON M.Movie_ID = R.Movie_ID
WHERE M.Movie_ID <= 5000
GROUP BY M.Movie_ID, M.Name
HAVING COUNT(R.Rating) >= 100
AND M.Movie_ID IN (
  SELECT Movie_ID
  FROM Rating
  GROUP BY Movie_ID
  HAVING COUNT(*) >= 100
)
ORDER BY M.NAME DESC;
SELECT * FROM TABLE(DBMS_XPLAN.DISPLAY());


--找出user_id為’712664’這位用戶評分為5的電影名

--1

CREATE INDEX rating_user_rating_idx ON RATING (RATING DESC)--建立索引
 
SELECT MOVIE.NAME
FROM MOVIE, RATING 
WHERE RATING.USER_ID='712664' 
AND RATING.RATING=5 
AND RATING.MOVIE_ID=MOVIE.MOVIE_ID;

--2

SELECT NAME
FROM MOVIE NATURAL JOIN RATING
WHERE USER_ID='712664' AND RATING=5;
